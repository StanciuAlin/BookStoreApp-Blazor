@page "/books/details/{id:int}"

@inject IBookService _bookService
@inject NavigationManager _navigationManager

<h3>Details about @_bookModel.Title by @_bookModel.AuthorName </h3>

<EditForm Model="_bookModel">
<fieldset disabled="true">
        <div class="form-group">
            <label>Book cover photo</label>
            <div>
                <img src="@_bookModel.Image" width="150" height="240" class="img-thumbnail" />
            </div>
        </div>
        <br />
        <div class="form-group">
            <label for="title">Title</label>
            <InputText class="form-control" @bind-Value="_bookModel.Title" id="title" />
            <ValidationMessage For="@(() => _bookModel.Title)" />
        </div>
        <br />
        <div class="form-group">
            <label for="authorName">Author</label>
            <InputText class="form-control" @bind-Value="_bookModel.AuthorName" id="authorName" />
            <ValidationMessage For="@(() => _bookModel.AuthorName)" />
        </div>
        <br />
        <div class="form-group">
            <label for="isbn">ISBN</label>
            <InputText class="form-control" @bind-Value="_bookModel.Isbn" id="isbn" />
            <ValidationMessage For="@(() => _bookModel.Isbn)" />
        </div>
        <br />
        <div class="form-group">
            <label for="price">Price</label>
            <InputNumber class="form-control" @bind-Value="_bookModel.Price" id="price" />
            <ValidationMessage For="@(() => _bookModel.Price)" />
        </div>
        <br />
        <div class="form-group">
            <label for="year">Year</label>
            <InputNumber class="form-control" @bind-Value="_bookModel.Year" id="year" />
            <ValidationMessage For="@(() => _bookModel.Year)" />
        </div>
        <br />
        <div class="form-group">
            <label for="summary">Summary</label>
            <InputTextArea class="form-control" @bind-Value="_bookModel.Summary" id="summary" />
            <ValidationMessage For="@(() => _bookModel.Summary)" />
        </div>
</fieldset>
    <br />
    <button class="btn btn-warning" @onclick="GoToEdit">
        <i class="bi bi-pencil"></i>
        Edit
    </button>
    <button class="btn btn-dark" @onclick="BackToList">
        <i class="bi bi-chevron-double-left"></i>
        Back to list
    </button>
</EditForm>


@code {
    // Matching with Id parameter from the @page
    [Parameter]
    public int Id { get; set; }

    private BookDetailsDto _bookModel = new BookDetailsDto();

    protected override async Task OnInitializedAsync()
    {
        var response = await _bookService.GetByIdAsync(Id);
        if (response.Success)
        {
            _bookModel = response.Data;
        }
    }

    private void BackToList()
    {
        _navigationManager.NavigateTo("/books/");
    }
    private void GoToEdit()
    {
        _navigationManager.NavigateTo($"/books/update/{_bookModel.Id}");
    }
}
