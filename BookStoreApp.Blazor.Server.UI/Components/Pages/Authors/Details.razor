@page "/authors/details/{id:int}"

@inject IAuthorService _authorService
@inject NavigationManager _navigationManager

<h3>Details about @AuthorModel.FirstName @AuthorModel.LastName </h3>

<EditForm Model="AuthorModel">
    <fieldset disabled="true">
        <div class="form-group">
            <label for="firstName">First Name</label>
            <InputText class="form-control" @bind-Value="AuthorModel.FirstName" id="firstname" />
            <ValidationMessage For="@(() => AuthorModel.FirstName)" />
        </div>
        <br />
        <div class="form-group">
            <label for="lastName">Last Name</label>
            <InputText class="form-control" @bind-Value="AuthorModel.LastName" id="lastname" />
            <ValidationMessage For="@(() => AuthorModel.LastName)" />
        </div>
        <br />
        <div class="form-group">
            <label for="bio">Biography</label>
            <InputTextArea class="form-control" @bind-Value="AuthorModel.Bio" id="bio" />
            <ValidationMessage For="@(() => AuthorModel.Bio)" />
        </div>
        <br />
    </fieldset>

    @if (AuthorModel.Books == null || AuthorModel.Books.Any() == false)
    {
        <div class="alert alert-dismissible alert-secondary">
            No books for @AuthorModel.FirstName @AuthorModel.LastName
        </div>
    }
    else
    {
        <br />
        <div class="row">
            @foreach (var book in AuthorModel.Books)
            {
                <div class="col-3">
                    <div class="card" style="width: 18rem;">
                        @* <img src="~/images/Frații_Jderi_film.jpg" width="70" height="130" class="card-img-top" alt="@book.Title"> *@
                        <img src="@book.Image" class="card-img-top" alt="@book.Title" style="width:286px; height:164px">
                        <div class="card-body">
                            <h5 class="card-title">@book.Title - @book.Price.ToString("C")</h5>
                            <p class="card-text"></p>
                            <a href="/books/details/@book.Id" class="btn btn-primary">View book</a>
                        </div>
                    </div>
                </div>
            }
        </div>
        <br />
    }

    <AuthorizeView Roles=@Roles.Administrator Context="authContext">
        <Authorized>
            <button @onclick="GoToEdit" class="btn btn-warning">
                <i class="bi bi-pencil"></i>
                Edit
            </button>
        </Authorized>
    </AuthorizeView>
    <button @onclick="BackToList" class="btn btn-dark">
        <i class="bi bi-chevron-double-left"></i>
        Back to list
    </button>
</EditForm>

@code {
    // Matching with Id parameter from the @page
    [Parameter]
    public int Id { get; set; }

    private AuthorDetailsDto AuthorModel = new AuthorDetailsDto();

    protected override async Task OnInitializedAsync()
    {
        var response = await _authorService.GetByIdAsync(Id);
        if (response.Success)
        {
            AuthorModel = response.Data;
        }
    }

    private void BackToList()
    {
        _navigationManager.NavigateTo("/authors/");
    }
    private void GoToEdit()
    {
        _navigationManager.NavigateTo($"/authors/update/{AuthorModel.Id}");
    }
}
